2008-06-12  Jakub Jelinek  <jakub@redhat.com>

	PR c/36507
	* c-decl.c (merge_decls): Don't clear DECL_EXTERNAL for
	nested inline functions.
	(start_decl, start_function): Don't invert DECL_EXTERNAL
	for nested inline functions.

	* gcc.dg/inline-28.c: New test.
	* gcc.dg/inline-29.c: New test.
	* gcc.dg/inline-30.c: New test.

--- gcc/c-decl.c.jj	2008-05-08 01:06:20.000000000 +0200
+++ gcc/c-decl.c	2008-06-12 17:40:19.000000000 +0200
@@ -1763,7 +1763,9 @@ merge_decls (tree newdecl, tree olddecl,
 	  || !DECL_DECLARED_INLINE_P (olddecl)
 	  || !DECL_EXTERNAL (olddecl))
       && DECL_EXTERNAL (newdecl)
-      && !lookup_attribute ("gnu_inline", DECL_ATTRIBUTES (newdecl)))
+      && !lookup_attribute ("gnu_inline", DECL_ATTRIBUTES (newdecl))
+      && (DECL_CONTEXT (newdecl) == NULL_TREE
+	  || TREE_CODE (DECL_CONTEXT (newdecl)) != FUNCTION_DECL))
     DECL_EXTERNAL (newdecl) = 0;
 
   if (DECL_EXTERNAL (newdecl))
@@ -3264,7 +3266,8 @@ start_decl (struct c_declarator *declara
   if (declspecs->inline_p
       && !flag_gnu89_inline
       && TREE_CODE (decl) == FUNCTION_DECL
-      && lookup_attribute ("gnu_inline", DECL_ATTRIBUTES (decl)))
+      && (lookup_attribute ("gnu_inline", DECL_ATTRIBUTES (decl))
+	  || current_function_decl))
     {
       if (declspecs->storage_class == csc_auto && current_scope != file_scope)
 	;
@@ -6094,7 +6097,8 @@ start_function (struct c_declspecs *decl
   if (declspecs->inline_p
       && !flag_gnu89_inline
       && TREE_CODE (decl1) == FUNCTION_DECL
-      && lookup_attribute ("gnu_inline", DECL_ATTRIBUTES (decl1)))
+      && (lookup_attribute ("gnu_inline", DECL_ATTRIBUTES (decl1))
+	  || current_function_decl))
     {
       if (declspecs->storage_class != csc_static)
 	DECL_EXTERNAL (decl1) = !DECL_EXTERNAL (decl1);
--- gcc/testsuite/gcc.dg/inline-28.c.jj	2008-06-12 17:19:10.000000000 +0200
+++ gcc/testsuite/gcc.dg/inline-28.c	2008-06-12 18:21:03.000000000 +0200
@@ -0,0 +1,28 @@
+/* PR c/36507 */
+/* { dg-do run } */
+/* { dg-options "-O0 -std=gnu89" } */
+
+int
+main (void)
+{
+  int i = 2;
+  auto inline int f1 (void)
+  {
+    return i;
+  }
+  inline int f2 (void)
+  {
+    return i;
+  }
+  auto inline int f3 (void);
+  auto inline int f3 (void)
+  {
+    return i;
+  }
+  auto inline int f4 (void);
+  inline int f4 (void)
+  {
+    return i;
+  }
+  return f1 () + f2 () + f3 () + f4 () - 8;
+}
--- gcc/testsuite/gcc.dg/inline-29.c.jj	2008-06-12 17:19:10.000000000 +0200
+++ gcc/testsuite/gcc.dg/inline-29.c	2008-06-12 18:21:08.000000000 +0200
@@ -0,0 +1,28 @@
+/* PR c/36507 */
+/* { dg-do run } */
+/* { dg-options "-O0 -std=gnu99" } */
+
+int
+main (void)
+{
+  int i = 2;
+  auto inline int f1 (void)
+  {
+    return i;
+  }
+  inline int f2 (void)
+  {
+    return i;
+  }
+  auto inline int f3 (void);
+  auto inline int f3 (void)
+  {
+    return i;
+  }
+  auto inline int f4 (void);
+  inline int f4 (void)
+  {
+    return i;
+  }
+  return f1 () + f2 () + f3 () + f4 () - 8;
+}
--- gcc/testsuite/gcc.dg/inline-30.c.jj	2008-06-12 17:19:10.000000000 +0200
+++ gcc/testsuite/gcc.dg/inline-30.c	2008-06-12 18:21:13.000000000 +0200
@@ -0,0 +1,28 @@
+/* PR c/36507 */
+/* { dg-do run } */
+/* { dg-options "-O0 -std=gnu99 -fgnu89-inline" } */
+
+int
+main (void)
+{
+  int i = 2;
+  auto inline int f1 (void)
+  {
+    return i;
+  }
+  inline int f2 (void)
+  {
+    return i;
+  }
+  auto inline int f3 (void);
+  auto inline int f3 (void)
+  {
+    return i;
+  }
+  auto inline int f4 (void);
+  inline int f4 (void)
+  {
+    return i;
+  }
+  return f1 () + f2 () + f3 () + f4 () - 8;
+}
