2007-06-15  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/32353
	* tree-ssa-structalias.c (set_uids_in_ptset): Also handle RESULT_DECL.

	* g++.dg/opt/nrv13.C: New test.

--- gcc/tree-ssa-structalias.c.jj	2007-06-11 11:12:27.000000000 +0200
+++ gcc/tree-ssa-structalias.c	2007-06-15 16:40:29.000000000 +0200
@@ -4343,7 +4343,8 @@ set_uids_in_ptset (tree ptr, bitmap into
 	    bitmap_set_bit (into, DECL_UID (sv->var));
 	}
       else if (TREE_CODE (vi->decl) == VAR_DECL 
-	       || TREE_CODE (vi->decl) == PARM_DECL)
+	       || TREE_CODE (vi->decl) == PARM_DECL
+	       || TREE_CODE (vi->decl) == RESULT_DECL)
 	{
 	  if (var_can_have_subvars (vi->decl)
 	      && get_subvars_for_var (vi->decl))
--- gcc/testsuite/g++.dg/opt/nrv13.C.jj	2007-06-15 16:59:02.000000000 +0200
+++ gcc/testsuite/g++.dg/opt/nrv13.C	2007-06-15 17:03:39.000000000 +0200
@@ -0,0 +1,42 @@
+// PR tree-optimization/32353
+// { dg-do run }
+// { dg-options "-O2" }
+
+extern "C" void abort ();
+
+struct A
+{
+  int f;
+  A (int x) : f (x) {}
+};
+
+A
+foo (const A &x, const A &y)
+{
+  A r (0);
+  r = x.f == -111 ? y : (y.f == -111 || x.f > y.f) ? x : y;
+  A s (0);
+  r = r.f == -111 ? s : (r.f > s.f) ? r : s;
+  return r;
+}
+
+int
+main ()
+{
+  if (foo (A (0), A (1)).f != 1)
+    abort ();
+  if (foo (A (1), A (9)).f != 9)
+    abort ();
+  if (foo (A (9), A (1)).f != 9)
+    abort ();
+  if (foo (A (-4), A (-5)).f != 0)
+    abort ();
+  if (foo (A (-111), A (-111)).f != 0)
+    abort ();
+  if (foo (A (2), A (-111)).f != 2)
+    abort ();
+  if (foo (A (-111), A (6)).f != 6)
+    abort ();
+  if (foo (A (-111), A (-4)).f != 0)
+    abort ();
+}
