PR go/88927

From aa3469119f6256799badc9722861976a416abbcc Mon Sep 17 00:00:00 2001
From: Ian Lance Taylor <iant@golang.org>
Date: Sat, 19 Jan 2019 22:40:27 -0800
Subject: [PATCH] runtime, internal/cpu: fix build for ARM GNU/Linux

Was failing with

../../../libgo/go/internal/cpu/cpu.go:138:2: error: reference to undefined name 'doinit'
  138 |  doinit()
      |  ^

Fix it by adding in Go 1.12 internal/cpu/cpu_arm.go, and the code in
runtime that initializes the values.

Fixes https://gcc.gnu.org/PR88927.

Change-Id: Ib376fcbd443acf428fa93d4aa77ec74edbaa71ee
---

--- libgo/go/internal/cpu/cpu_arm.go
+++ libgo/go/internal/cpu/cpu_arm.go
@@ -0,0 +1,33 @@
+// Copyright 2017 The Go Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style
+// license that can be found in the LICENSE file.
+
+package cpu
+
+// arm doesn't have a 'cpuid' equivalent, so we rely on HWCAP/HWCAP2.
+// These are linknamed in runtime/os_(linux|freebsd)_arm.go and are
+// initialized by archauxv().
+// These should not be changed after they are initialized.
+var HWCap uint
+var HWCap2 uint
+
+// HWCAP/HWCAP2 bits. These are exposed by Linux and FreeBSD.
+const (
+	hwcap_VFPv4 = 1 << 16
+	hwcap_IDIVA = 1 << 17
+)
+
+func doinit() {
+	options = []option{
+		{Name: "vfpv4", Feature: &ARM.HasVFPv4},
+		{Name: "idiva", Feature: &ARM.HasIDIVA},
+	}
+
+	// HWCAP feature bits
+	ARM.HasVFPv4 = isSet(HWCap, hwcap_VFPv4)
+	ARM.HasIDIVA = isSet(HWCap, hwcap_IDIVA)
+}
+
+func isSet(hwc uint, value uint) bool {
+	return hwc&value != 0
+}
--- libgo/go/runtime/os_linux_arm.go
+++ libgo/go/runtime/os_linux_arm.go
@@ -4,6 +4,8 @@
 
 package runtime
 
+import "internal/cpu"
+
 var randomNumber uint32
 
 func archauxv(tag, val uintptr) {
@@ -14,5 +16,9 @@
 		// it as a byte array.
 		randomNumber = uint32(startupRandomData[4]) | uint32(startupRandomData[5])<<8 |
 			uint32(startupRandomData[6])<<16 | uint32(startupRandomData[7])<<24
+	case _AT_HWCAP:
+		cpu.HWCap = uint(val)
+	case _AT_HWCAP2:
+		cpu.HWCap2 = uint(val)
 	}
 }
